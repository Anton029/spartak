const fixElem = document.querySelectorAll('.scroll_fix')
const srcollBarWidth = window.innerWidth - document.querySelector('.page_wrapper').offsetWidth + 'px'

document.addEventListener('DOMContentLoaded', () => {
    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent) && window.innerWidth > 500) {
        fixElem.forEach(el => {
            el.style.cssText = `padding-right: ${srcollBarWidth}`
        })
    }
})

$(document).ready(function (){
    const callOffset = $('.mobile_call_button').offset().top;
    $(window).scroll(function(){
        let scroll = $(this).scrollTop();
        if (scroll >= callOffset - 10) {
            $('.mobile_call_button').addClass('fixed')
        }

        if (scroll < callOffset - 10) {
            $('.mobile_call_button').removeClass('fixed')
        }
    })
})

const applyButton = document.getElementById('application_button_wrapper');
const content_2 = document.querySelector('.content_2_wrapper');
const goToPurhcase_1 = document.querySelector('#go_to_purchase_wrapper');
const content_3 = document.querySelector('.content_3_wrapper');
const content_4 = document.querySelector('.content_4_wrapper');
const content_5 = document.querySelector('.content_5_wrapper');
const nextButton = document.querySelector('.next_button');

applyButton.addEventListener('click', function(){
    let sliderPosition = content_2.offsetTop;
    window.scrollTo({
        left: 0,
        top: sliderPosition,
        behavior: 'smooth'
    });
})

goToPurhcase_1.addEventListener('click', function (){
    let scrollPosition = content_3.offsetTop
    window.scrollTo({
        left: 0,
        top: scrollPosition,
        behavior: 'smooth'
    })
})

const categoryButtons = document.querySelector('.categories_title_wrapper');
const categories = document.querySelectorAll('.category_title');
const categoriesAdvantages = document.querySelectorAll('.list')
const bigPics = document.querySelectorAll('.big_picture img')
const smallPicsImg = document.querySelectorAll('.small_picture img')
const smallPics = document.querySelectorAll('.small_picture')
const rentDay = document.querySelector('.calendar_wrapper .date')
const categoriesNames = ['premium', 'gold', 'silver', 'bronze']
const minSeatsAmount = [16, 13, 14, 1]
const maxSeatsAmount = [51, 16, 17, 17]
let tabData = 0

function formRest(){
    lodgeSelect.innerHTML = 'Выберите ложу'
    document.querySelector('.order_form .lodge_input_wrapper .input_text').innerHTML = 'Выберите ложу'
    nextButton.classList.remove('active')
}

function tabsHandler(data){
    document.querySelector('.location_choice').innerHTML = `Категория ${categoriesNames[data]}`

    document.querySelector(`.list[data-adv="${data}"]`).classList.add('visible')

    bigPics.forEach(el => {
        el.classList.remove('visible')
    })

    smallPicsImg.forEach(el => {
        el.classList.remove('visible')
    })

    smallPics.forEach(el => {
        el.querySelector(`.${categoriesNames[data]}`).classList.add('visible')
    })

    document.querySelector(`.big_picture .${categoriesNames[data]}`).classList.add('visible')
}

function amountSeatsRewrite(tabData){
    document.querySelector('.amount_text span').innerHTML = minSeatsAmount[tabData]
    document.querySelector('.input_wrapper .min_value').innerHTML = minSeatsAmount[tabData]
    document.querySelector('.input_wrapper .max_value').innerHTML = maxSeatsAmount[tabData]
    document.querySelector('.input_wrapper .amount_input').setAttribute('min', `${minSeatsAmount[tabData]}`)
    document.querySelector('.input_wrapper .amount_input').setAttribute('max', `${maxSeatsAmount[tabData]}`)
    document.querySelector('.input_wrapper .amount_input').value = `${minSeatsAmount[tabData]}`
    maxInputValue = inputSlider.getAttribute('max')
    minInputValue = inputSlider.getAttribute('min')
    fullProgWidth = document.querySelector('.input_wrapper').offsetWidth
    progWidth = fullProgWidth / (maxInputValue - minInputValue)
    inputProgressBar.style.width = '0px'
}

categoryButtons.addEventListener('click', (e) => {
    if(e.target.classList.contains('category_title')) {
        document.querySelector(`.category_title[data-category="${tabData}"]`).classList.remove('selected')
        document.querySelector(`.list[data-adv="${tabData}"]`).classList.remove('visible')
        
        document.querySelector('.locations_wrapper').querySelector(`input[data-location="${tabData}"`).checked = false

        document.querySelector('.footer_select').
        querySelector(`.select_body[data-location-select="${tabData}"`).classList.remove('visible')

        tabData = e.target.dataset.category;

        document.querySelector('.footer_select').
        querySelector(`.select_body[data-location-select="${tabData}"`).classList.add('visible')

        document.querySelector('.locations_wrapper').querySelector(`input[data-location="${tabData}"`).checked = true

        amountSeatsRewrite(tabData)

        document.querySelector(`.category_title[data-category="${tabData}"]`).classList.add('selected')
        document.querySelector(`.category_title[data-category="${tabData}"]`).querySelector('input').checked = true
        tabsHandler(tabData)
        formRest()
    }
})


const rentTypeWindow = document.querySelector('.rent_details')
const rentTypeButtons = document.querySelector('.rent_type_wrapper')
const defaultHeight = rentTypeWindow.offsetHeight 
// const rentWindowResize = document.querySelector('.calendar_wrapper').offsetHeight
const rentWindowResize = document.querySelector('.next_button_wrapper').offsetHeight

var rentType = 0;
rentTypeButtons.addEventListener('click', (e) =>{
    if (e.target.classList.contains('rent_type')) {
        document.querySelector(`.rent_type[data-rent-type="${rentType}"]`).classList.remove('selected')
        rentType = parseInt(e.target.dataset.rentType)
        document.querySelector(`.rent_type[data-rent-type="${rentType}"]`).classList.add('selected')
        document.querySelector(`.rent_type[data-rent-type="${rentType}"]`).querySelector('input').checked = true

        if (rentType == 0) {
            rentTypeWindow.style.cssText = `height: ${defaultHeight + 25}`
            calendarBody.style.cssText = 'transform: translateY(-40%) scaleY(0)'
            document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 6'
            if (lodgeSelect.innerHTML != 'Выберите ложу') {
                nextButton.classList.add('active')
            }
            document.querySelector('.order_form .date_input_wrapper .input_text').innerHTML = 'Аренда на сезон'
        }
        if (rentType == 1) {
            rentTypeWindow.style.cssText = `height: ${defaultHeight + rentWindowResize + 25}px`
            if (nextButton.classList.contains('active') && document.querySelector('.calendar .date').innerHTML == 'Выберите дату') {
                nextButton.classList.remove('active')
            }
        }
    }
})

const locationInput = document.querySelectorAll('.locations_wrapper input')
locationInput.forEach((e) => {
    e.addEventListener('click', () => {
        document.querySelector(`.category_title[data-category="${tabData}"]`).classList.remove('selected')
        document.querySelector(`.list[data-adv="${tabData}"]`).classList.remove('visible')
        
        document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.remove('visible')
        tabData = e.dataset.location
        amountSeatsRewrite(tabData)

        document.querySelector(`.category_title[data-category="${tabData}"]`).classList.add('selected')
        document.querySelector(`.category_title[data-category="${tabData}"]`).querySelector('input').checked = true
        tabsHandler(tabData)
        formRest()
    })
})

const inputSlider = document.querySelector('.amount_input')
const inputSeats = document.querySelector('.amount_text span')
const inputProgressBar = document.querySelector('.progress_bar')
let maxInputValue = inputSlider.getAttribute('max')
let minInputValue = inputSlider.getAttribute('min')
let fullProgWidth = document.querySelector('.input_wrapper').offsetWidth
let progWidth = fullProgWidth / (maxInputValue - minInputValue)

inputSlider.oninput = (() => {
    let inputValue = Number(inputSlider.value)
    let progressPos = (inputValue - minInputValue)
    inputSeats.innerHTML = `${inputValue}`
    inputProgressBar.style.width = `${(progressPos * progWidth)}px`;
})

window.addEventListener("resize", () => {
    fullProgWidth = document.querySelector('.input_wrapper').offsetWidth
    progWidth = fullProgWidth / (maxInputValue - minInputValue)
    let inputValue = Number(inputSlider.value)
    let progressPos = (inputValue - minInputValue)
    inputProgressBar.style.width = `${(progressPos * progWidth)}px`;
})

const lodgeSelect = document.querySelector('.select_header')
const selectList = document.querySelectorAll('.user_choice_wrapper .select_lodges_wrapper .select .select_body')
const selectItems = document.querySelectorAll('.user_choice_wrapper .select_lodges_wrapper .select_item')
let isHoverOnSelectList = false;
let isHoverOnSelectButton = false;

selectItems.forEach((e) => {
    e.addEventListener('click', () => {
        let itemValue = e.innerHTML
        lodgeSelect.innerHTML = itemValue
        document.querySelector('.order_form .lodge_input_wrapper .input_text').innerHTML = itemValue
        document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.remove('visible')
        let elem = document.querySelector(`.select_body[data-location-select="${tabData}"]`)
        elem.style.cssText = 'transform: translateX(40px)';
        
        let selectedDate = document.querySelector('.calendar_wrapper .date').innerHTML

        if (!nextButton.classList.contains('active') && rentType != 1
            ||
            !nextButton.classList.contains('active') && selectedDate != 'Выберите дату') {
            nextButton.classList.add('active')
        }
    })
})

const calendarButton = document.querySelector('.calendar')
const calendarBody = document.querySelector('.calendar_body_wrapper')
const calendarBodyFooter = document.querySelector('.order_form .date_input_wrapper .calendar_body')

let isHoverOnCalendarBody = false
let isHoverOnCalendarButton = false

$(function() {
    $('.calendar_body').datepicker();
});

$('.calendar_body').change(() => {
    
    let date = $('.calendar_body').val()
    $('.calendar .date').html(`${date}`)
    $('.order_form .date_input_wrapper .input_text').html(`${date}`)
    calendarBody.style.cssText = ('transform', 'translateY(-40%) scaleY(0)')


    setTimeout(() => {
        document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 6'
    }, 300)

    if (lodgeSelect.innerHTML != 'Выберите ложу') {
        nextButton.classList.add('active')
    }
})

calendarBody.addEventListener('mouseenter', async() => {
    isHoverOnCalendarBody = true
})

calendarBody.addEventListener('mouseleave', async() => {
    isHoverOnCalendarBody = false
    setTimeout(() => {
        if (isHoverOnCalendarBody == false && isHoverOnCalendarButton == false) {
            calendarBody.style.cssText = ''
            setTimeout(() => {
                document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 6'
            }, 300)
        }
    }, 600)
})

// calendarButton.addEventListener('click', async() => {
//     document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 8'
//     document.querySelector('.calendar_body_wrapper').style.cssText = 'transform: translateY(calc(-100%)) scaleY(1)'
// })

calendarButton.addEventListener('mouseenter', async() => {
    isHoverOnCalendarButton = true
    setTimeout(() => {
        if (isHoverOnCalendarButton == true) {
            document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 8'
            if (window.innerWidth >= 1200) {
                calendarBody.style.cssText = 'transform: translateY(calc(-100%)) scaleY(1)'
            }
            if (window.innerWidth < 1200) {
                calendarBody.style.cssText = 'transform: translateY(calc(-100% + 25px)) scaleY(1)'
            }
        }
    }, 600)
})

calendarButton.addEventListener('mouseleave', async() => {
    isHoverOnCalendarButton = false
    setTimeout(() => {
        if (isHoverOnCalendarBody == false && isHoverOnCalendarButton == false) {
            calendarBody.style.cssText = ''
            setTimeout(() => {
                document.querySelector('.calendar_wrapper').style.cssText = 'z-index: 6'
            }, 300)
        }
    }, 600)
})

// lodgeSelect.addEventListener('click', () =>{
//     document.querySelector('.user_choice_wrapper').style.cssText = 'z-index: 8'
//     document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.add('visible')
//     let elem = document.querySelector(`.select_body[data-location-select="${tabData}"]`)
//     elem.style.cssText = 'transform: translateX(0px)';
// })

lodgeSelect.addEventListener('mouseenter', () =>{
    isHoverOnSelectButton = true;

    document.querySelector('.user_choice_wrapper').style.cssText = 'z-index: 8'
    setTimeout(() => {
       if (isHoverOnSelectButton == true) {
            document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.add('visible')
            let elem = document.querySelector(`.select_body[data-location-select="${tabData}"]`)
            elem.style.cssText = 'transform: translateX(0px)';
       }
    }, 600)
})

lodgeSelect.addEventListener('mouseout', () =>{
    isHoverOnSelectButton = false;
    setTimeout(() => {
        if (isHoverOnSelectList == false && isHoverOnSelectButton == false) {
            document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.remove('visible')
            let elem = document.querySelector(`.select_body[data-location-select="${tabData}"]`)
            elem.style.cssText = 'transform: translateX(40px)';
            setTimeout(() => {
                if (isHoverOnSelectButton == false) {
                    document.querySelector('.user_choice_wrapper').style.cssText = 'z-index: 5'
                }
            }, 300)
        }
    }, 600)
})

selectList.forEach((e) => {
    e.addEventListener('mouseenter', () => {
        isHoverOnSelectList = true
    })
})

selectList.forEach((e) => {
    e.addEventListener('mouseleave', () => {
        isHoverOnSelectList = false

        setTimeout(() => {
            if (isHoverOnSelectList == false && isHoverOnSelectButton != true) {
                document.querySelector(`.select_body[data-location-select="${tabData}"]`).classList.remove('visible')
                let elem = document.querySelector(`.select_body[data-location-select="${tabData}"]`)
                elem.style.cssText = 'transform: translateX(40px)';
            }
        }, 600)
    })
})

const fetchLodges = document.querySelectorAll('.rent_details .select .select_item')
fetchLodges.forEach((e) => {
    e.addEventListener('click', () => {
        let lodgeNumber = e.dataset.lodge

        let fetchData = {lodgeNumber}
        fetch(hostURL + 'lodgesDB', {
            method: 'post',
            mode: 'cors',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(fetchData)
        })
            .then(res => res.text())
                .then(data => {
                    // document.getElementById("server_response").innerHTML = data
                    // console.log(data);
                })
    })
})

const nextButton_2 = document.querySelector('.next_button')

nextButton_2.addEventListener('click', () => {
    if (nextButton_2.classList.contains('active')) {
        let scrollPosition = content_4.offsetTop
        if (rentType == 0) {
            document.querySelector('.order_form .date_input_wrapper .input_text').innerHTML = 'Аренда на сезон'
        }
        window.scrollTo({
            left: 0,
            top: scrollPosition,
            behavior: 'smooth'
        })
    }
})

const tableHeaders = document.querySelectorAll('.table .table_header')
const tableButtons = document.querySelectorAll('.table .table_footer .button')
let dataTable = 0

const serviceNames = ['Эксклюзив', 'Премиум', 'Комфорт']

tableHeaders.forEach((e) => {
    e.addEventListener('click', () => {
        tableHeaders[dataTable].classList.remove('active')
        tableButtons[dataTable].classList.remove('active')

        tableItems.forEach((e) => {
            let out = e.querySelectorAll('.item')[dataTable].querySelectorAll('.icon')
            out.forEach((e) => {
                e.classList.remove('bright');
            })
        })

        dataTable = parseInt(e.dataset.service)

        document.querySelector('.order_form .service_input_wrapper .input_text').innerHTML = serviceNames[dataTable]

        tableItems.forEach((e) => {
            let out = e.querySelectorAll('.item')[dataTable].querySelectorAll('.icon')
            out.forEach((e) => {
                e.classList.add('bright');
            })
        })

        tableButtons[dataTable].classList.add('active')
        tableHeaders[dataTable].classList.add('active')
        let scrollPosition = content_5.offsetTop
        window.scrollTo({
            left: 0,
            top: scrollPosition,
            behavior: 'smooth'
        })
    })
})

let tableItems = document.querySelectorAll('.table_content .table_row')

tableButtons.forEach((e) => {
    e.addEventListener('click', () => {
        tableHeaders[dataTable].classList.remove('active')
        tableButtons[dataTable].classList.remove('active')

        tableItems.forEach((e) => {
            let out = e.querySelectorAll('.item')[dataTable].querySelectorAll('.icon')
            out.forEach((e) => {
                e.classList.remove('bright');
            })
        })

        dataTable = parseInt(e.dataset.service)

        document.querySelector('.order_form .service_input_wrapper .input_text').innerHTML = serviceNames[dataTable]

        tableItems.forEach((e) => {
            let out = e.querySelectorAll('.item')[dataTable].querySelectorAll('.icon')
            out.forEach((e) => {
                e.classList.add('bright');
            })
        })

        tableButtons[dataTable].classList.add('active')
        tableHeaders[dataTable].classList.add('active')
        let scrollPosition = content_5.offsetTop
        window.scrollTo({
            left: 0,
            top: scrollPosition,
            behavior: 'smooth'
        })
    })
})

const mobileServiceButtons = document.querySelectorAll('.service_level_list_wrapper .button')
const mobileServiceList = document.querySelectorAll('.service_level_list .list')

let serviceData = 0

mobileServiceButtons.forEach((e) => {
    e.addEventListener('click', () => {
        mobileServiceButtons[serviceData].classList.remove('active')
        mobileServiceList[serviceData].classList.remove('visible')

        serviceData = parseInt(e.dataset.service)

        document.querySelector('.order_form .service_input_wrapper .input_text').innerHTML = serviceNames[serviceData]

        mobileServiceList[serviceData].classList.add('visible')
        mobileServiceButtons[serviceData].classList.add('active')
    })
})

const nextButton_3 = document.querySelector('.service_level_list_wrapper .next_button')


nextButton_3.addEventListener('click', () => {
    let scrollPosition = content_5.offsetTop
    window.scrollTo({
        left: 0,
        top: scrollPosition,
        behavior: 'smooth'
    })
})


const mobileCateringButtons = document.querySelectorAll('.mobile_catering .set')
const mobileCateringContent = document.querySelectorAll('.mobile_catering .set_desc')

let cateringCategory = 0

const cateringNames = ['Сет Золото', 'Сет Серебро', 'Сет Бронза', 'Без питания']

mobileCateringButtons.forEach((e) => {
    e.addEventListener('click', () => {
        mobileCateringContent[cateringCategory].classList.remove('visible')
        document.querySelector(`.mobile_catering .set[data-catering="${cateringCategory}"]`).classList.remove('active')

        cateringCategory = e.dataset.catering

        document.querySelector('.order_form .catering_input_wrapper .input_text').innerHTML = cateringNames[cateringCategory]

        mobileCateringContent[cateringCategory].classList.add('visible')
        document.querySelector(`.mobile_catering .set[data-catering="${cateringCategory}"]`).classList.add('active')
    })
})

let nextButton_4 = document.querySelectorAll('.catering .button')
const mobileNextButton_4 = document.querySelector('.catering .choice_button')

const content_6 = document.querySelector('.content_6_wrapper');

nextButton_4.forEach((e) => {
    e.addEventListener('click', () => {
        let catering = e.dataset.catering
        document.querySelector('.order_form .catering_input_wrapper .input_text').innerHTML = cateringNames[catering]

        let scrollPosition = content_6.offsetTop
        window.scrollTo({
            left: 0,
            top: scrollPosition,
            behavior: 'smooth'
        })
})
})

mobileNextButton_4.addEventListener('click', () => {
    let scrollPosition = content_6.offsetTop
    window.scrollTo({
        left: 0,
        top: scrollPosition,
        behavior: 'smooth'
    })
})

let isHoverOnSelectFooter = [false, false, false, false]
let isHoverOnSelectBodyFooter = [false, false, false, false]

let formInputs = document.querySelectorAll('.order_form .lodge_input_wrapper, .date_input_wrapper, .service_input_wrapper, .catering_input_wrapper')
let formSelects = document.querySelectorAll('.order_form .footer_select')

formInputs.forEach((e) => {
    e.addEventListener('mouseenter', () => {
        let data = e.dataset.form
        isHoverOnSelectFooter[data] = true

        setTimeout(() => {
            if (isHoverOnSelectFooter[data] == true && isHoverOnSelectBodyFooter[data] == false){
                formSelects.forEach((e) => {
                    e.style.cssText = ''
                })
                if (data == 0 || data == 2 || data == 3){
                    formSelects[data].style.cssText = 'transform: translateX(0%); opacity: 1; visibility: visible; z-index: 2;'
                }
                if(data == 1){
                    formSelects[data].style.cssText = 'transform: scaleY(1); opacity: 1; visibility: visible; z-index: 2;'
                }
            }
        }, 600)
    })

    e.addEventListener('click', () => {
        let data = e.dataset.form
        isHoverOnSelectFooter[data] = true
        formSelects.forEach((e) => {
            e.style.cssText = ''
        })
    })

    e.addEventListener('mouseleave', () => {
        let data = e.dataset.form
        isHoverOnSelectFooter[data] = false

        setTimeout(() => {
            if (isHoverOnSelectFooter[data] == false && isHoverOnSelectBodyFooter[data] == false){
                    formSelects[data].style.cssText = ''
            }
        }, 600)
    })
})

formSelects.forEach((e) => {
    e.addEventListener('mouseenter', () => {
        let data = e.dataset.select
        isHoverOnSelectBodyFooter[data] = true
    })
    e.addEventListener('mouseleave', () => {
        let data = e.dataset.select
        isHoverOnSelectBodyFooter[data] = false
        setTimeout(() => {
            if (isHoverOnSelectBodyFooter[data] == false){
                    formSelects[data].style.cssText = ''
            }
        }, 600)
    })
})

const footerLodgeItems = document.querySelectorAll('.order_data_wrapper .lodge_input_wrapper .footer_select .select_item')

footerLodgeItems.forEach((e) => {
    e.addEventListener('click', () => {
        let lodge = e.innerHTML
        document.querySelector('.order_form .lodge_input_wrapper .input_text').innerHTML = lodge
        document.querySelector('.user_choice_wrapper .select_lodges_wrapper .select_header').innerHTML = lodge
        isHoverOnSelectFooter[0] = false
        isHoverOnSelectBodyFooter[0] = false
        formSelects[0].style.cssText = ''
    })
})

$('.order_form .calendar_body').change(() => {

    let date = $('.order_form .calendar_body').val()
    $('.calendar .date').html(`${date}`)
    $('.order_form .date_input_wrapper .input_text').html(`${date}`)
    isHoverOnSelectFooter[1] = false
    isHoverOnSelectBodyFooter[1] = false
    formSelects[1].style.cssText = ''
})

const footerServiceItems = document.querySelectorAll('.order_form .service_input_wrapper .select_body .select_item')

footerServiceItems.forEach((e) => {
    e.addEventListener('click', () => {
        let service = e.innerHTML
        document.querySelector('.order_form .service_input_wrapper .input_text').innerHTML = service
        isHoverOnSelectFooter[2] = false
        isHoverOnSelectBodyFooter[2] = false
        formSelects[2].style = ''
    })
})

const footerCateringItems = document.querySelectorAll('.order_form .catering_input_wrapper .select_item')


footerCateringItems.forEach((e) => {
    e.addEventListener('click', () => {
        let catering = e.innerHTML
        document.querySelector('.order_form .catering_input_wrapper .input_text').innerHTML = catering
        isHoverOnSelectFooter[3] = false
        isHoverOnSelectBodyFooter[3] = false
        formSelects[3].style.cssText = '';
    })
})

//fetches
const hostURL = 'http://localhost:4000/'

const formSentButton = document.querySelector('.form_body .send_form_button')

formSentButton.addEventListener('click', () => {
    let name = document.querySelector('.form_body .name_input_wrapper input').value
    let phone = document.querySelector('.form_body .phone_input_wrapper input').value
    let mail = document.querySelector('.form_body .email_input_wrapper input').value
    let lodge = document.querySelector('.order_data_wrapper .lodge_input_wrapper .input_text').innerHTML
    let date = document.querySelector('.order_data_wrapper .date_input_wrapper .input_text').innerHTML
    let service = document.querySelector('.order_data_wrapper .service_input_wrapper .input_text').innerHTML
    let catering = document.querySelector('.order_data_wrapper .catering_input_wrapper .input_text').innerHTML
    let fetchData = {name, phone, mail, lodge, date, service, catering}
    fetch(hostURL + 'sendMail', {
        method: 'post',
        mode: 'cors',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(fetchData)
    })
})